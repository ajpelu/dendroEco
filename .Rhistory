col_types = c("numeric", "date", "text",
"numeric", "numeric", "numeric",
rep("text",5)))
df <- df %>% mutate(mes = lubridate::month(date, label = TRUE, abbr=TRUE))
df$url <- createLink(df$url)
createLink <- function(val) {
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" >%s</a>',val,val)
}
df$url <- createLink(df$url)
createLink <- function(val) {
sprintf('<a href="https://www.google.com/#q=%s" target="_blank" >%s</a>',val,val)
}
library("readxl")
library("lubridate")
library("dplyr")
Sys.setlocale(category = "LC_ALL", locale = "es_ES.UTF-8")
df <- read_xlsx(path="/Users/ajpelu/Dropbox/bicha_calendar/data/calendar.xlsx",
sheet = "Hoja1",
col_types = c("numeric", "date", "text",
"numeric", "numeric", "numeric",
rep("text",5)))
df <- df %>% mutate(mes = lubridate::month(date, label = TRUE, abbr=TRUE))
df$url <- createLink(df$url)
shiny::runApp('Dropbox/bicha_calendar')
runApp('Dropbox/bicha_calendar')
runApp('Dropbox/bicha_calendar')
library("readxl")
library("lubridate")
library("dplyr")
Sys.setlocale(category = "LC_ALL", locale = "es_ES.UTF-8")
df <- read_xlsx(path="/Users/ajpelu/Dropbox/bicha_calendar/data/calendar.xlsx",
sheet = "Hoja1",
col_types = c("numeric", "date", "text",
"numeric", "numeric", "numeric",
rep("text",5)))
data <- df %>% mutate(mes = lubridate::month(date, label = TRUE, abbr=TRUE))
data$url <- paste0("<a href='",data$url,"'>",data$url,"</a>")
shiny::runApp('Dropbox/bicha_calendar')
Sys.setlocale(category = "LC_ALL", locale = "es_ES.UTF-8")
df <- read_xlsx(path="/Users/ajpelu/Dropbox/bicha_calendar/data/calendar.xlsx",
sheet = "Hoja1",
col_types = c("numeric", "date", "text",
"numeric", "numeric", "numeric",
rep("text",5)))
data <- df %>% mutate(mes = lubridate::month(date, label = TRUE, abbr=TRUE))
library("readxl")
library("lubridate")
library("dplyr")
Sys.setlocale(category = "LC_ALL", locale = "es_ES.UTF-8")
df <- read_xlsx(path="/Users/ajpelu/Dropbox/bicha_calendar/data/calendar.xlsx",
sheet = "Hoja1",
col_types = c("numeric", "date", "text",
"numeric", "numeric", "numeric",
rep("text",5)))
data <- df %>% mutate(mes = lubridate::month(date, label = TRUE, abbr=TRUE))
View(data)
data$url <- paste0("<a href='",data$url,"'>",data$url,"</a>")
View(data)
head(data)
data <- df %>% mutate(mes = lubridate::month(date, label = TRUE, abbr=TRUE)) %>% as.data.frame()
head(data)
runApp('Dropbox/bicha_calendar')
runApp('Dropbox/bicha_calendar')
View(data)
View(data)
data[1,]
runApp('Dropbox/bicha_calendar')
runApp('Dropbox/bicha_calendar')
runApp('Dropbox/bicha_calendar')
runApp('Dropbox/bicha_calendar')
runApp('Dropbox/bicha_calendar')
knitr::opts_chunk$set(echo = TRUE)
install.packages('DT')
here
library(here)
a <- c(1.4288,1-2972,1.3752, 1.32)
a
a <- c(1.4288,1.2972,1.3752, 1.32)
a
mean(a)
min(a)
max(a)
31.8190 * 100
3181.9/mean(a)
3181.9/min(a)
3181.9/max(a)
21863.15/31.8190
3181.90/218.6315
21863.15/1.3553
234700/16131
library(rgbif)
citation("rgbif")
citation("rstan")
install.packages('rstan')
install.packages(c("ggplot2", "sf", "shiny", "shinydashboard", "stringr", "tidyverse"))
install.packages("lwgeom")
library(ggplot2)
library(mapdata)
library(sf)
library(lwgeom)
mapBase <- map("worldHires", fill = T, plot = F)
# now we need to coerce it to an "sf" object, and fix any
mapBase <- st_as_sf(mapBase)
# now let's try cropping it to a region of Europe
cropMap <- st_crop(mapBase, xmin = -15, xmax = 30, ymin = 30, ymax = 60)
install.packages(sf)
install.packages("sf")
library(sf)
library(mapdata)
library(sf)
library(lwgeom)
install.packages("lwgeom")
library(mapdata)
library(sf)
library(lwgeom)
install.packages("lwgeom", type = "source")
install.packages("lwgeom", type = "source")
library(mapdata)
library(sf)
library(lwgeom)
install.packages("lwgeom", type = "source")
library(ggplot2)
# now lets load some other packages that we'll need to load and manipulate
# spatial data in R
library(mapdata)
library(sf)
library(lwgeom)
install.packages("lwgeom")
install.packages("lwgeom")
library(lwgeom)
library(ggplot2)
# now lets load some other packages that we'll need to load and manipulate
# spatial data in R
library(mapdata)
library(sf)
mapBase <- map("worldHires", fill = T, plot = F)
# now we need to coerce it to an "sf" object, and fix any
mapBase <- st_as_sf(mapBase)
# now let's try cropping it to a region of Europe
cropMap <- st_crop(mapBase, xmin = -15, xmax = 30, ymin = 30, ymax = 60)
knitr::opts_chunk$set(echo = TRUE)
library(rgdal)
library(sp)
library(raster)
library(here)
mydsn <- here::here("Downloads/rodales/")
qp <- rgdal::readOGR(dsn=here::here("Downloads/rodales/"),
layer = 'Rodales_COPLAS_2', verbose = TRUE, encoding = "UTF-8")
rodales <- rgdal::readOGR(dsn=here::here("Downloads/rodales/"),
layer = 'Rodales_COPLAS_2', verbose = TRUE, encoding = "UTF-8")
projection(rodales)
CRS("+init=epsg:4326")
proj4string(rodales) <- CRS("+init=epsg:23030")
projection(rodales)
writeOGR(obj = rodales, dsn=here::here("Downloads/rodales/"),
layer = 'rodales_23030', driver = 'ESRI Shapefile',
encoding = "UTF-8", overwrite_layer = TRUE)
code4326 <- "+init=epsg:4326"
rodal4326 <- spTransform(rodales_23030, CRS(code4326))
rodal4326 <- spTransform(rodales, CRS(code4326))
writeOGR(obj = rodal4326, dsn=here::here("Downloads/rodales/"),
layer = 'rodales_4326', driver = 'ESRI Shapefile',
encoding = "UTF-8", overwrite_layer = TRUE)
devtools::install_github("tylermorganwall/rayshader")
library(rayshader)
library(raster)
mde <- raster::raster('/Users/ajpelu/Google Drive/carto_publica/MDE/mdesn/mdeSN.tif')
elmat = matrix(raster::extract(mde,raster::extent(mde),buffer=1000),
nrow=ncol(mde),ncol=nrow(mde))
elmat %>%
sphere_shade(texture = "desert") %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
library(rgdal)
bbox <- rgdal::readOGR(dsn='/Users/ajpelu/Downloads/',
layer = 'bboxCanar', verbose = TRUE, encoding = "UTF-8")
plot(bbox)
mdeCanar <- crop(mde, extent(bbox))
elmat = matrix(raster::extract(mdeCanar,raster::extent(mdeCanar,buffer=1000),
nrow=ncol(mdeCanar),ncol=nrow(mdeCanar))
elmat = matrix(raster::extract(mdeCanar,raster::extent(mdeCanar),buffer=1000),
nrow=ncol(mdeCanar),ncol=nrow(mdeCanar))
elmat %>%
sphere_shade(texture = "desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
?sphere_shade
elmat %>%
sphere_shade(texture = "imhof1") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "imhof1") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "imhof2") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "imhof3") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "imhof4") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "imhof5") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "bw") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "unicorn") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "desert") %>%
plot_map()
elmat %>%
sphere_shade(sunangle= 45, texture = "desert") %>%
plot_map()
elmat %>%
sphere_shade(sunangle= 10, texture = "desert") %>%
plot_map()
elmat %>%
sphere_shade(sunangle= 70, texture = "desert") %>%
plot_map()
elmat %>%
sphere_shade(sunangle= 310, texture = "desert") %>%
plot_map()
?ambient_shade
ambmat = ambient_shade(elmat)
raymat = ray_shade(elmat,lambert = TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
add_water(detect_water(elmat), color="desert") %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert") %>%
add_water(detect_water(elmat), color="desert") %>%
add_shadow(raymat,0.7) %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert") %>%
add_water(detect_water(elmat), color="desert") %>%
add_shadow(raymat,0.7) %>%
add_shadow(ambmat,0.7) %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert",progbar = FALSE) %>%
add_water(detect_water(elmat), color="desert") %>%
add_shadow(ray_shade(elmat,zscale=3,maxsearch = 300,progbar = FALSE),0.7) %>%
add_shadow(ambmat,0.7) %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
bbox <- rgdal::readOGR(dsn='/Users/ajpelu/Downloads/',
layer = 'bboxSJ', verbose = TRUE, encoding = "UTF-8")
mdeCanar <- crop(mde, extent(bbox))
elmat = matrix(raster::extract(mdeCanar,raster::extent(mdeCanar),buffer=1000),
nrow=ncol(mdeCanar),ncol=nrow(mdeCanar))
elmat %>%
sphere_shade(sunangle= 310, texture = "desert") %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert",progbar = FALSE) %>%
add_water(detect_water(elmat), color="desert") %>%
add_shadow(ray_shade(elmat,zscale=3,maxsearch = 300,progbar = FALSE),0.7) %>%
add_shadow(ambmat,0.7) %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
elmat %>%
sphere_shade(texture = "desert",progbar = FALSE) %>%
add_water(detect_water(elmat), color="desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
mde <- raster::raster('/Users/ajpelu/Google Drive/carto_publica/MDE/mde_rect/hdr.adf')
mdeCanar <- crop(mde, extent(bbox))
elmat = matrix(raster::extract(mdeCanar,raster::extent(mdeCanar),buffer=1000),
nrow=ncol(mdeCanar),ncol=nrow(mdeCanar))
elmat %>%
sphere_shade(sunangle= 310, texture = "desert") %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert",progbar = FALSE) %>%
add_water(detect_water(elmat), color="desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800)
elmat %>%
sphere_shade(texture = "desert",progbar = FALSE) %>%
add_water(detect_water(elmat), color="desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800))
ambmat = ambient_shade(elmat)
raymat = ray_shade(elmat,lambert = TRUE)
elmat %>%
sphere_shade(texture = "desert",progbar = FALSE) %>%
add_water(detect_water(elmat), color="desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800), water = TRUE)
elmat %>%
sphere_shade(texture = "desert",progbar = FALSE) %>%
add_water(detect_water(elmat), color="desert") %>%
plot_3d(elmat,zscale=10,fov=0,theta=135,zoom=0.9,phi=45, windowsize = c(800,800), water = TRUE) %>%
render_water()
library(magrittr)
library("devtools", lib.loc="~/Library/R/3.3/library")
install.packages(c("devtools", "roxygen2", "usethis"))
install.packages('available')
library(available)
available("dendRo")
library(googlesheets)
gs_auth(new_user = TRUE)
gs_ls()
df <- gs_title("data_dendro_LIFE")
hoja <- gs_title("data_dendro_LIFE")
df <- gs_read(hoja)
?gs_read
f <- gs_title("data_dendro_LIFE")
gs_ws_ls(f)
df <- gs_read(ws = 'tree_data')
df <- gs_read(f, ws = 'tree_data')
df
ca <- df %>% filter(loc == "CANAR_LOW")
library("tidyverse")
ca <- df %>% filter(loc == "CANAR_LOW")
ca
get_coords_trees <- function(angle, distance, x0, y0) {
angle <- ifelse(angle <= 90, 90 - angle, 450 - angle)
data.frame(x = x0 + distance * cos(angle / 180 * pi),
y = y0+ distance * sin(angle / 180 * pi))
}
ca <- df %>% filter(loc == "CANAR_LOW") %>%
mutate(xcord = get_coords_trees(angle= azimuth_degree,
distance = distance_m,
x0 = 0, y0 = 0)$x,
ycord = get_coords_trees(angle = azimuth_degree,
distance = distance_m,
x0 = 0, y0 = 0)$y)
head(ca)
View(ca)
ca %>%
ggplot(aes(x=xcord, y=ycord)) +
geom_point(aes(size=dn), shape=21, fill='transparent') +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent'))
# see stackoverflow questions 6862742
gg_circle <- function(radius, xcenter, ycenter, color='black', fill=NA, ...){
x <- xcenter + radius*cos(seq(0,pi, length.out = 100))
ymax <- ycenter + radius*sin(seq(0, pi, length.out = 100))
ymin <- ycenter + radius*sin(seq(0, -pi, length.out = 100))
annotate("ribbon", x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}
ca %>%
ggplot(aes(x=xcord, y=ycord)) +
geom_point(aes(size=dn), shape=21, fill='transparent') +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent'))
ca %>%
ggplot(aes(x=xcord, y=ycord)) +
geom_point(aes(size=dbh1_cm), shape=21, fill='transparent') +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent'))
library("ggrepel")
ca %>%
ggplot(aes(x=xcord, y=ycord, label=treeCode)) +
geom_point(aes(size=dbh1_cm), shape=21, fill='transparent') +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent')) +
geom_text_repel()
ca %>%
ggplot(aes(x=xcord, y=ycord, label=treeCode)) +
geom_point(aes(size=dbh1_cm), shape=21, fill='transparent') +
geom_point() +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent')) +
geom_text_repel()
ca %>%
ggplot(aes(x=xcord, y=ycord, label=treeCode)) +
geom_point(aes(size=dbh1_cm), shape=21, fill='transparent') +
geom_point(size=0.1) +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent')) +
geom_text_repel()
ca %>%
ggplot(aes(x=xcord, y=ycord, label=treeCode)) +
geom_point(aes(size=dbh1_cm*10), shape=21, fill='transparent') +
geom_point(size=0.1) +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent')) +
geom_text_repel()
ca %>% filter(treeCode == 'CAL52')
ca %>% filter(treeCode == 'CAL53')
ca %>% filter(treeCode == 'CAL08')
ca %>% filter(treeCode == 'CAL46')
ca %>%
ggplot(aes(x=xcord, y=ycord, label=treeCode)) +
geom_point(aes(size=dbh1_cm), shape=21, fill='transparent') +
geom_point(size=0.1) +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
gg_circle(radius = 7.21, xcenter = 0, ycenter = 0, linetype = "dashed") +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent')) +
geom_text_repel()
ca %>%
ggplot(aes(x=xcord, y=ycord, label=treeCode)) +
geom_point(aes(size=dbh1_cm), shape=21, fill='transparent') +
geom_point(size=0.1) +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
gg_circle(radius = 7.21, xcenter = 0, ycenter = 0, linetype = "dotted") +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent')) +
geom_text_repel()
ca %>%
ggplot(aes(x=xcord, y=ycord, label=treeCode)) +
geom_point(aes(size=dbh1_cm), shape=21, fill='transparent') +
geom_point(size=0.1) +
xlim(-11,11) + ylim(-11,11) +
geom_point(aes(x=0, y=0), color='green') +
theme_bw() +
gg_circle(radius = 10, xcenter = 0, ycenter = 0) +
gg_circle(radius = 7.21, xcenter = 0, ycenter = 0, linetype = "dotted") +
gg_circle(radius = 8.14, xcenter = 0, ycenter = 0, linetype = "dotted") +
gg_circle(radius = 9.75, xcenter = 0, ycenter = 0, linetype = "dotted") +
gg_circle(radius = 9.86, xcenter = 0, ycenter = 0, linetype = "dotted") +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
strip.background = element_rect(colour = "black", fill ='transparent')) +
geom_text_repel()
?Startup
library(usethis)
usethis::use_usethis()
library(devtools)
library(roxygen2)
library(usethis)
usethis::create_package("/Users/ajpelu/Google Drive/my_repos/dendroEco")
usethis::use_r("coordTrees")
coordTrees <- function(angle, distance, x0 = 0, y0 = 0) {
if (missing(distance))
stop("Need a distance's vector")
if(missing(angle))
stop("Need an angle's vector")
angle <- ifelse(angle <= 90, 90 - angle, 450 - angle)
data.frame(x = x0 + distance * cos(angle / 180 * pi),
y = y0+ distance * sin(angle / 180 * pi))
}
library("googlesheets")
library("tidyverse")
library("ggrepel")
f <- gs_title("data_dendro_LIFE")
# See sheets
gs_ws_ls(f)
# Read the data
df <- gs_read(f, ws = 'tree_data')
ca <- df %>% filter(loc == "CANAR_LOW") %>%
mutate(xcord = coordTrees(angle= azimuth_degree,
distance = distance_m,
x0 = 0, y0 = 0)$x,
ycord = coordTrees(angle = azimuth_degree,
distance = distance_m,
x0 = 0, y0 = 0)$y)
head(ca)
head(ca)
x0 = 0, y0 = 0)$y)
ca1 <- df %>% filter(loc == "CANAR_LOW") %>%
mutate(xcord = coordTrees(angle= azimuth_degree,
distance = distance_m)$x,
ycord = coordTrees(angle = azimuth_degree,
distance = distance_m)$y)
ca1
xcord = coordTrees(angle= ca$azimuth_degree, distance = ca$distance_m)
xcord
str(xcord)
